DROP ALL OBJECTS;

create table APPELLATION (
    ID integer generated by default as identity,
    VERSION integer,
    NAME varchar(255) not null,
    DESCRIPTION varchar(255),
    LATITUDE float,
    LONGITUDE float,
    IMAGE integer,
    REGION integer not null,
    primary key (ID)
);

create table BOOKING (
    ID integer generated by default as identity,
    VERSION integer,
    BOOKING_EVENT integer not null,
    CUSTOMER integer not null,
    primary key (ID)
);

create table BOOKING_BOTTLE (
    ID integer generated by default as identity,
    VERSION integer,
    MAX integer not null,
    POSITION integer not null,
    PRICE float not null,
    URL varchar(255) not null,
    BOOKING_EVENT integer,
    FORMAT integer not null,
    WINE integer not null,
    primary key (ID)
);

create table BOOKING_EVENT (
    ID integer generated by default as identity,
    VERSION integer,
    NAME varchar(255) not null,
    END date not null,
    START date not null,
    primary key (ID)
);

create table BOOKING_QUANTITIES (
    BOOKING integer not null,
    QUANTITY integer not null,
    BOOKING_BOTTLE integer not null,
    primary key (BOOKING, BOOKING_BOTTLE)
);

create table CELLAR (
    ID integer generated by default as identity,
    VERSION integer,
    NAME varchar(255) not null,
    OWNER integer not null,
    primary key (ID)
);

create table CELLAR_SHARE (
    ID integer generated by default as identity,
    VERSION integer,
    ACCESS_RIGHT integer not null,
    EMAIL varchar(255) not null,
    CELLAR integer not null,
    primary key (ID)
);

create table CONFIGURATION (
    ID integer generated by default as identity,
    VERSION integer,
    CONFIG_KEY varchar(255),
    CONFIG_VALUE varchar(2000),
    primary key (ID)
);

create table CONTACT (
    ID integer generated by default as identity,
    VERSION integer,
    CURRENT date not null,
    NEXT date,
    TEXT varchar(10000),
    PRODUCER integer,
    primary key (ID)
);

create table COUNTRY (
    ID integer generated by default as identity,
    VERSION integer,
    NAME varchar(255) not null,
    DESCRIPTION varchar(255),
    LATITUDE float,
    LONGITUDE float,
    IMAGE integer,
    primary key (ID)
);

create table FORMAT (
    ID integer generated by default as identity,
    VERSION integer,
    NAME varchar(255) not null,
    CAPACITY float,
    primary key (ID)
);

create table IMAGE (
    ID integer generated by default as identity,
    VERSION integer,
    NAME varchar(255) not null,
    CONTENT binary(255),
    CONTENT_TYPE varchar(255) not null,
    HEIGHT integer,
    WIDTH integer,
    primary key (ID)
);

create table MOVEMENT (
    WAY char(31) not null,
    ID integer generated by default as identity,
    VERSION integer,
    DATE date,
    NUMBER integer,
    CHARGES float,
    PRICE float,
    SOURCE varchar(255),
    DESTINATION varchar(255),
    FORMAT integer not null,
    WINE integer not null,
    CELLAR integer not null,
    primary key (ID)
);

create table PRODUCER (
    ID integer generated by default as identity,
    VERSION integer,
    NAME varchar(255) not null,
    ADDRESS_CITY varchar(255),
    ADDRESS_LINE_1 varchar(255),
    ADDRESS_LINE_2 varchar(255),
    LATITUDE float,
    LONGITUDE float,
    ADDRESS_ZIP_CODE varchar(255),
    CONTACT_INFORMATION varchar(10000),
    DESCRIPTION varchar(10000),
    EMAIL varchar(255),
    FAX varchar(255),
    PHONE varchar(255),
    WEBSITE_URL varchar(255),
    COUNTRY integer,
    primary key (ID)
);

create table REGION (
    ID integer generated by default as identity,
    VERSION integer,
    NAME varchar(255) not null,
    DESCRIPTION varchar(255),
    LATITUDE float,
    LONGITUDE float,
    COUNTRY integer not null,
    IMAGE integer,
    primary key (ID)
);

create table STACK (
    ID integer generated by default as identity,
    VERSION integer,
    STACK_COUNT bigint,
    STACK_HASH integer,
    STACK clob,
    primary key (ID)
);

create table STOCK (
    ID integer generated by default as identity,
    VERSION integer,
    QUANTITY integer,
    FORMAT integer not null,
    WINE integer not null,
    CELLAR integer not null,
    primary key (ID)
);

create table USER (
    ID integer generated by default as identity,
    VERSION integer,
    EMAIL varchar(255) not null,
    FIRSTNAME varchar(255) not null,
    LASTNAME varchar(255) not null,
    PASSWORD varchar(40) not null,
    PROFILE varchar(255),
    primary key (ID)
);

create table VARIETAL (
    ID integer generated by default as identity,
    VERSION integer,
    NAME varchar(255) not null,
    DESCRIPTION varchar(255),
    FLESH varchar(255),
    SKIN varchar(255),
    primary key (ID)
);

create table WINE (
    ID integer generated by default as identity,
    VERSION integer,
    NAME varchar(255) not null,
    COLOR integer not null,
    DESCRIPTION varchar(255),
    PHOTO_URL varchar(255),
    RANKING varchar(255),
    TYPE integer not null,
    VINTAGE integer,
    APPELLATION integer not null,
    PRODUCER integer not null,
    primary key (ID)
);

create table WINE_VARIETAL (
    WINE integer not null,
    PERCENT integer,
    VARIETAL integer not null,
    primary key (WINE, VARIETAL)
);

alter table APPELLATION 
    add constraint UK_9ame1yvu2kl9fr12ggxxb4dyd unique (NAME, REGION);

alter table BOOKING 
    add constraint UK_ilrd55eelword070ye6g7iyvb unique (CUSTOMER, BOOKING_EVENT);

alter table BOOKING_BOTTLE 
    add constraint UK_8old7oygvv7tjnr9jaqm4coal unique (FORMAT, WINE, BOOKING_EVENT);

alter table BOOKING_BOTTLE 
    add constraint UK_e4tkcfn7u7mbtma5ey9d7s78h unique (BOOKING_EVENT, POSITION);

alter table BOOKING_EVENT 
    add constraint UK_cfn179ockp8wdh44j5lee8y9h unique (NAME, START, END);

alter table CELLAR_SHARE 
    add constraint UK_2ogheo8sdqkkko4teyc7aehkp unique (EMAIL, CELLAR);

alter table CONTACT 
    add constraint UK_dyhvagvima0pqg5rrtc0ryxnf unique (PRODUCER, CURRENT);

alter table COUNTRY 
    add constraint UK_l7qlysdc1xbo69vsmueersr2k unique (NAME);

alter table FORMAT 
    add constraint UK_l2rgax2t2n6pl7c4npjtwx0qh unique (NAME);

alter table REGION 
    add constraint UK_q03tsqbwp5uxw5xlpn119t44q unique (NAME, COUNTRY);

alter table STACK 
    add constraint UK_7pty3a3712rqqwpvqjb6jg0ib unique (STACK_HASH);

alter table STOCK 
    add constraint UK_cfk515t73vtnrofy218355rvu unique (WINE, FORMAT, CELLAR);

alter table USER 
    add constraint UK_ejfk3g58oxsgbb4ju3u4fhivk unique (EMAIL);

alter table VARIETAL 
    add constraint UK_4ais7dvr2x8k4pyjarmhtg8oo unique (NAME);

alter table WINE 
    add constraint UK_9bckwkaf9b4n0k76ofgwatl7e unique (APPELLATION, COLOR, TYPE, NAME, VINTAGE, PRODUCER);

alter table APPELLATION 
    add constraint FK_m2ylqprcb51fpnr5xmfj8be7m 
    foreign key (IMAGE) 
    references IMAGE;

alter table APPELLATION 
    add constraint FK_tkk2tew0ul3i360x4neejqc3w 
    foreign key (REGION) 
    references REGION;

alter table BOOKING 
    add constraint FK_5b1jwhbj4briq5atqtqxtg3aq 
    foreign key (BOOKING_EVENT) 
    references BOOKING_EVENT;

alter table BOOKING 
    add constraint FK_77bw4psuvaskcdgtnhs5xg02x 
    foreign key (CUSTOMER) 
    references USER;

alter table BOOKING_BOTTLE 
    add constraint FK_f5bqy4000tspmwkllg1ey51x0 
    foreign key (BOOKING_EVENT) 
    references BOOKING_EVENT;

alter table BOOKING_BOTTLE 
    add constraint FK_3751ri2ek9ptjpyogoqe1d6aq 
    foreign key (FORMAT) 
    references FORMAT;

alter table BOOKING_BOTTLE 
    add constraint FK_qgj1nvqsqmgtm2uwhevh585ru 
    foreign key (WINE) 
    references WINE;

alter table BOOKING_QUANTITIES 
    add constraint FK_d1s67acumftsclb95ijwtkfcc 
    foreign key (BOOKING_BOTTLE) 
    references BOOKING_BOTTLE;

alter table BOOKING_QUANTITIES 
    add constraint FK_nwlypbar6xn7b7f9ov4ndt825 
    foreign key (BOOKING) 
    references BOOKING;

alter table CELLAR 
    add constraint FK_fqek6982ulg8vmefvh0ix7e2o 
    foreign key (OWNER) 
    references USER;

alter table CELLAR_SHARE 
    add constraint FK_b0.8.3-SNAPSHOTy7w88fml4e2h15e977l 
    foreign key (CELLAR) 
    references CELLAR;

alter table CONTACT 
    add constraint FK_kc0svj3ay7dk2udqgcwbf5r84 
    foreign key (PRODUCER) 
    references PRODUCER;

alter table COUNTRY 
    add constraint FK_etbyvmhf6iap4o98k3h81d6fn 
    foreign key (IMAGE) 
    references IMAGE;

alter table MOVEMENT 
    add constraint FK_27xxv3o7y7f705xopc6oqu151 
    foreign key (FORMAT) 
    references FORMAT;

alter table MOVEMENT 
    add constraint FK_6gmjos6jti1ruo7lttkri1f8v 
    foreign key (WINE) 
    references WINE;

alter table MOVEMENT 
    add constraint FK_4j237q1j11u63hwrqq25a7cas 
    foreign key (CELLAR) 
    references CELLAR;

alter table PRODUCER 
    add constraint FK_qp2c9wo89hey7i0ppn9f2kcwx 
    foreign key (COUNTRY) 
    references COUNTRY;

alter table REGION 
    add constraint FK_cpingwjr1ovjg3h8q8di47yje 
    foreign key (COUNTRY) 
    references COUNTRY;

alter table REGION 
    add constraint FK_qqhms3wqkxsj5qiibfwcnub8j 
    foreign key (IMAGE) 
    references IMAGE;

alter table STOCK 
    add constraint FK_fd50i5sw40i59v9k3hc9x2shr 
    foreign key (FORMAT) 
    references FORMAT;

alter table STOCK 
    add constraint FK_ovdtsrv6cox3k95y8mspsco4k 
    foreign key (WINE) 
    references WINE;

alter table STOCK 
    add constraint FK_144mnitlaedul93ql6l6u6eqf 
    foreign key (CELLAR) 
    references CELLAR;

alter table WINE 
    add constraint FK_pkut1w29w0f1io85l54shtosd 
    foreign key (APPELLATION) 
    references APPELLATION;

alter table WINE 
    add constraint FK_4fbroccn31koo0ao67gy6jdj1 
    foreign key (PRODUCER) 
    references PRODUCER;

alter table WINE_VARIETAL 
    add constraint FK_5p9w2p2w0ilscsccxyuppb7i8 
    foreign key (VARIETAL) 
    references VARIETAL;

alter table WINE_VARIETAL 
    add constraint FK_kyu5dtnw4k00s5es9gcdxgleo 
    foreign key (WINE) 
    references WINE;

INSERT INTO CONFIGURATION (CONFIG_KEY, CONFIG_VALUE, version) values('MAIL_ADDRESS_SENDER', 'toto@test.com', 0);
INSERT INTO CONFIGURATION (CONFIG_KEY, CONFIG_VALUE, version) values('REMINDER_ADDRESS_RECEIVERS', 'titi@test.com', 0);

INSERT INTO USER (VERSION, EMAIL, FIRSTNAME, LASTNAME, PASSWORD, PROFILE) values (0, 'test@test.com', 'Test', 'Test', 'CF8Orkbts9yiF+FMj0gAR65NmEk8ycq5/ueJKw==', 'ADMIN');
INSERT INTO USER (VERSION, EMAIL, FIRSTNAME, LASTNAME, PASSWORD, PROFILE) values (0, 'other@test.com', 'Test', 'Test', 'CF8Orkbts9yiF+FMj0gAR65NmEk8ycq5/ueJKw==', 'ADMIN');

INSERT INTO COUNTRY (VERSION, NAME, DESCRIPTION) values (0, 'France', '');
INSERT INTO COUNTRY (VERSION, NAME, DESCRIPTION) values (0, 'Allemagne', '');

INSERT INTO REGION (VERSION, NAME, COUNTRY, DESCRIPTION) values (0, 'Bordeaux', 1, '');
INSERT INTO REGION (VERSION, NAME, COUNTRY, DESCRIPTION) values (0, 'Bourgogne', 1, '');
INSERT INTO REGION (VERSION, NAME, COUNTRY, DESCRIPTION) values (0, 'Mosel', 2, '');
INSERT INTO REGION (VERSION, NAME, COUNTRY, DESCRIPTION) values (0, 'Sud-ouest', 1, '');

INSERT INTO APPELLATION (VERSION, NAME, REGION, DESCRIPTION) values (0, 'Saint-Emilion', 1, '');
INSERT INTO APPELLATION (VERSION, NAME, REGION, DESCRIPTION) values (0, 'Saint-Estèphe', 1, '');
INSERT INTO APPELLATION (VERSION, NAME, REGION, DESCRIPTION) values (0, 'Chambertin', 2, '');
INSERT INTO APPELLATION (VERSION, NAME, REGION, DESCRIPTION) values (0, 'Musigny', 2, '');
INSERT INTO APPELLATION (VERSION, NAME, REGION, DESCRIPTION) values (0, 'Riesling Kabinett', 3, '');
INSERT INTO APPELLATION (VERSION, NAME, REGION, DESCRIPTION) values (0, 'Gaillac', 4, '');

INSERT INTO FORMAT (VERSION, NAME, CAPACITY) values (0, 'Bouteille', 0.75);
INSERT INTO FORMAT (VERSION, NAME, CAPACITY) values (0, 'Magnum', 1.5);

INSERT INTO PRODUCER (VERSION, NAME) values (0, 'Château Cheval Blanc');
INSERT INTO PRODUCER (VERSION, NAME) values (0, 'Château Pez');
INSERT INTO PRODUCER (VERSION, NAME) values (0, 'Domaine Armand Rousseau');
INSERT INTO PRODUCER (VERSION, NAME) values (0, 'Domaine Roumier');
INSERT INTO PRODUCER (VERSION, NAME) values (0, 'Domaine Rotier');

INSERT INTO WINE (VERSION, NAME, COLOR, TYPE, RANKING, VINTAGE, APPELLATION, PRODUCER, DESCRIPTION, PHOTO_URL)
values (0, '', 3, 3, 'GCC', 2005, 1, 1, '', '');
INSERT INTO WINE (VERSION, NAME, COLOR, TYPE, RANKING, VINTAGE, APPELLATION, PRODUCER, DESCRIPTION, PHOTO_URL)
values (0, '', 3, 3, '', 2006, 2, 2, '', '');
INSERT INTO WINE (VERSION, NAME, COLOR, TYPE, RANKING, VINTAGE, APPELLATION, PRODUCER, DESCRIPTION, PHOTO_URL)
values (0, '', 3, 3, '', 2005, 3, 3, '', '');
INSERT INTO WINE (VERSION, NAME, COLOR, TYPE, RANKING, VINTAGE, APPELLATION, PRODUCER, DESCRIPTION, PHOTO_URL)
values (0, '', 3, 3, '', 2005, 4, 4, '', '');
INSERT INTO WINE (VERSION, NAME, COLOR, TYPE, RANKING, VINTAGE, APPELLATION, PRODUCER, DESCRIPTION, PHOTO_URL)
values (0, 'Renaissance', 2, 3, '', 2005, 6, 5, '', '');

INSERT INTO BOOKING_EVENT (VERSION, NAME, START, END) values (0, 'Campagne de test 1', '2000-01-01', '3000-01-01');
INSERT INTO BOOKING_EVENT (VERSION, NAME, START, END) values (0, 'Campagne de test 2', '2000-01-01', '3000-01-01');

INSERT INTO BOOKING_BOTTLE (VERSION, MAX, PRICE, URL, BOOKING_EVENT, WINE, FORMAT, POSITION)
values (0, 0, 40, '', 1, 1, 1, 0);
INSERT INTO BOOKING_BOTTLE (VERSION, MAX, PRICE, URL, BOOKING_EVENT, WINE, FORMAT, POSITION)
values (0, 0, 20, '', 1, 2, 1, 1);
INSERT INTO BOOKING_BOTTLE (VERSION, MAX, PRICE, URL, BOOKING_EVENT, WINE, FORMAT, POSITION)
values (0, 0, 200, '', 2, 3, 1, 0);
INSERT INTO BOOKING_BOTTLE (VERSION, MAX, PRICE, URL, BOOKING_EVENT, WINE, FORMAT, POSITION)
values (0, 0, 300, '', 2, 4, 1, 1);
INSERT INTO BOOKING_BOTTLE (VERSION, MAX, PRICE, URL, BOOKING_EVENT, WINE, FORMAT, POSITION)
values (0, 0, 600, '', 2, 4, 2, 2);

INSERT INTO BOOKING (VERSION, BOOKING_EVENT, CUSTOMER) values (0, 1, 1);
INSERT INTO BOOKING (VERSION, BOOKING_EVENT, CUSTOMER) values (0, 2, 1);

INSERT INTO BOOKING_QUANTITIES (BOOKING, QUANTITY, BOOKING_BOTTLE) values (1, 6, 1);
INSERT INTO BOOKING_QUANTITIES (BOOKING, QUANTITY, BOOKING_BOTTLE) values (1, 6, 2);
INSERT INTO BOOKING_QUANTITIES (BOOKING, QUANTITY, BOOKING_BOTTLE) values (2, 6, 3);
INSERT INTO BOOKING_QUANTITIES (BOOKING, QUANTITY, BOOKING_BOTTLE) values (2, 6, 4);
INSERT INTO BOOKING_QUANTITIES (BOOKING, QUANTITY, BOOKING_BOTTLE) values (2, 6, 5);

INSERT INTO CELLAR (NAME, OWNER, VERSION) values ('Cave 1', 1, 0);
INSERT INTO CELLAR (NAME, OWNER, VERSION) values ('Cave 2', 2, 0);

INSERT INTO STOCK (CELLAR, FORMAT, WINE, QUANTITY, VERSION) values (1, 1, 1, 6, 0);
INSERT INTO STOCK (CELLAR, FORMAT, WINE, QUANTITY, VERSION) values (1, 1, 2, 3, 0);
INSERT INTO STOCK (CELLAR, FORMAT, WINE, QUANTITY, VERSION) values (2, 2, 3, 3, 0);
INSERT INTO STOCK (CELLAR, FORMAT, WINE, QUANTITY, VERSION) values (2, 2, 4, 3, 0);
